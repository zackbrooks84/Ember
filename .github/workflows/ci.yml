name: tests

on:
  push:
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y graphviz libgraphviz-dev pkg-config

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pytest
          pip freeze > pip-freeze.txt

      # Create the golden snapshot once, if it doesn't exist
      - name: Create golden snapshot if missing
        run: |
          set -euxo pipefail
          if [ ! -f tests/_golden_metrics.json ]; then
            UPDATE_GOLDEN=1 pytest -q tests/test_golden_metrics.py 2>&1 | tee golden.out
          else
            echo "golden metrics already exist" | tee golden.out
          fi
        env:
          PYTHONWARNINGS: default

      # Run full suite; always tee to files so we can upload them
      - name: Run pytest (collect only)
        id: collect
        run: |
          set -euxo pipefail
          pytest --collect-only -q 2>&1 | tee collect.out
          echo "collected=ok" >> $GITHUB_OUTPUT
        shell: bash

      - name: Run pytest (suite)
        id: run
        run: |
          set -euxo pipefail
          # xunit-xml gives a machine-readable report for a quick glance
          pytest -v tests/ --maxfail=1 --durations=25 \
                --junitxml=report.xml 2>&1 | tee pytest.out
          status=${PIPESTATUS[0]}
          echo "status=$status" >> $GITHUB_OUTPUT
          exit $status
        shell: bash

      # Upload whatever we have, even if tests failed
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.python-version }}
          path: |
            pytest.out
            collect.out
            golden.out
            report.xml
            pip-freeze.txt
          if-no-files-found: ignore
