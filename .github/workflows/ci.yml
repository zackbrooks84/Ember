name: tests

on:
  push:
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Show environment (sanity)
        run: |
          python --version
          pwd
          ls -la
          echo "--- tests dir ---"
          ls -la tests || true
          echo "--- top of repo ---"
          find . -maxdepth 2 -type d -print

      - name: Install deps
        run: |
          python -m pip install -U pip
          # ensure pytest is present even if not pinned in requirements.txt
          pip install -r requirements.txt pytest
          pip freeze > pip-freeze.txt

      - name: Pytest collect-only (debug)
        run: |
          pytest -q --collect-only | tee collect.out

      - name: Run full test suite
        # save console output + junit xml so you can read failures easily
        run: |
          pytest -vv --maxfail=1 --durations=10 --junitxml=report.xml | tee pytest.out
        # always run so artifacts upload even on failure
        continue-on-error: true

      - name: Empirical golden metrics
        run: |
          pytest -vv tests/test_golden_metrics.py -m empirical | tee golden.out
        continue-on-error: true

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-${{ matrix.python-version }}
          path: |
            pytest.out
            collect.out
            golden.out
            report.xml
            pip-freeze.txt
          if-no-files-found: warn
